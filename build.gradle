buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.bmuschko:gradle-docker-plugin:3.0.3'
	}
}

plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'groovy'
	id 'idea'
}
group = 'com.daimler'
version = '0.0.1'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	compile 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation(
			'org.springframework.boot:spring-boot-starter-test',
			'org.codehaus.groovy:groovy-all:2.5.8',
			'org.spockframework:spock-core:1.3-groovy-2.5',
			'org.spockframework:spock-spring:1.3-groovy-2.5'
	)
}


apply plugin: 'com.bmuschko.docker-remote-api'
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
docker {
	if (System.env.containsKey('DOCKER_HOST') && System.env.containsKey('DOCKER_CERT_PATH')) {
		url = System.env.DOCKER_HOST.replace("tcp", "https")
		certPath = new File(System.env.DOCKER_CERT_PATH)
	}
}
task buildImage(type: DockerBuildImage) {
	dependsOn assemble
	inputDir = project.rootDir
	tag = "dailmer/food-service:${project.version}"
}


